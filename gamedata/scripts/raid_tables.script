
-- =========================================
-- ================== Main ===================
-- =========================================
-- actor ranks (in mod_system_xraids.ltx)

--raid_raid_time = 20 -- for surge test
raid_raid_time = 22 * 60		-- real-time seconds without bonuses	

raid_start_super_surge = 180						 
raid_loss_reputation_trader_when_kill = 8

raid_hit_from_artifacts_mult = 1.8
raid_hit_accumulated_radiation_mult = 0.9

raid_btr_cost = 20000		-- btr use cost
raid_heli_cost = 34000		-- heli use cost

raid_btr_travel_time_mult = 0.6		-- travel time multiplier
raid_heli_travel_time_mult = 0.3		-- travel time multiplier

fuel_trade_table = { [1] = 0.05, 	[2] = 0.1, 	[3] = 0.15, 	[4] = 0.25 }		-- chance to spawn "fuel" on trader per supply level
fuel_loot_chance = 0.05		-- 5% to spawn "fuel" on body

raid_survive_chance = 10		-- base without bonuses
raid_survive_pda_2 = 20		-- pda 2 bonus nahuya?
raid_survive_pda_3 = 30		-- pda 3 bonus nahuya?
raid_survive_pill = 30			-- pill bonus

keep_items_amount = raid_options_mcm.get_config("keep_items_on_death")
rank_loss_on_death = raid_options_mcm.get_config("rank_loss_on_death")

simulation_spawn_mult = raid_options_mcm.get_config("simulation_spawn_mult")


-- =========================================
-- ================== Map ===================
-- =========================================
informant_open_event_cost = 1800


-- =========================================
-- ================= For Treasures by Rojok ===================
-- =========================================
informant_show_treasures_on_level_cost = {6500, 8500, 11500, 15500} 
stash_reset_cooldown = {144000, 180000, 216000, 252000}
number_of_caches = 3


-- =========================================
-- =================  For Achievements by Rojok ===================
-- =========================================
--Rojok

tbl_factions_enemy_for_achievement = { stalker = false, dolg = false, freedom = false, bandit = true, army = true, zombied = false, ecolog = false, killer = true, monolith = true, csky = false, renegade = true, greh = true, isg = true, greh_npc = false, army_npc = false }

--Traders achievements
discount_for_achievement = 6
discount_all_for_achievement = 25

goodwill_for_achievement = 1200

-- Не трогать, техническое.
points_for_new_rank_veteran = 99999 		--Values ​​are loaded into "actor_on_first_update()"
points_for_new_rank_expert = 99999
points_for_new_rank_master = 99999
points_for_new_rank_legend = 99999

--Savage
giant_melee_kill_counter_for_achievement = 3
--Sekach
boar_melee_kill_counter_for_achievement = 8

--reaper
count_kill_stalker_for_achievement = 10 
time_to_kill_for_achievement = 360

--killer
count_kill_stalker_pistol_for_achievement = 5 
time_to_kill_pistol_for_achievement = 360

--Sucful_compl_raids
limiting_death_count_raid_for_achievement = 4
count_successful_raids_for_achievement = 35

--Sucful_nights_raids
count_sucful_nights_raids_for_achievement = 5

--tasks_one_raid
count_complete_tasks_one_raid_for_achievement = 6


-- =========================================
-- ================= Events ===================
-- =========================================
event_reset_cooldown = 10650		-- game seconds between event resets
raid_fake_events_mult = 0.1		-- 0.33 means 33% of events will be fake


-- =========================================
-- =============== Trade / Tasks ================
-- =========================================
max_goodwill = 1400
min_goodwill = -1400

min_trade_goodwill = -800		-- hide trade dialogue below this goodwill

task_reset_cooldown = 36000		-- game seconds between task resets
base_task_money = 1000
base_task_money_range = 1000	-- рандом +- к финальной стоимости награды
base_task_rank = 14
base_task_goodwill = 30
base_task_find_fail_goodwill = -10

base_task_fail_goodwill = -35

other_money_mult = 1.40		-- "other" community task reward multiplier
other_goodwill_penalty = -20		-- "other" community goodwill penalty to all other communities


informant_bonus_tasks_amount = 4			-- called in raid_tasks_main 		local informant_bonus
informant_bonus_insurance_percent = raid_options_mcm.get_config("insurance_percent")
informant_bonus_sell_pda_min = 300
informant_bonus_sell_pda_max = 2200
informant_bonus_raid_time = 10

item_donation_koef = 2000		-- divider (cost/koef) = goodwill


-- grouped items by kind for trade and reward
-- kind = group
kind_t = {
	i_arty_junk = "jartefact", 		i_arty = "artefact", 		i_food = "food", 		i_drink = "food",		i_misc = "junk",
	i_medical = "medicine", 		i_kit = "kit", 		i_repair = "repair", 		i_upgrade = "upgrade",
	o_helmet = "helmet",  		i_attach = "attach", 		i_backpack = "backpack",		i_mutant_belt = "mutant_hide",
	i_mutant_part = "mutant_parts",		i_mutant_cooked = "mutant_food",		i_mutant_raw = "mutant_meat",
	o_light = "o_light", 		o_medium = "o_medium", 		o_sci = "o_sci", 		o_heavy = "o_heavy",
	w_ammo = "ammo", 		w_melee = "melee", 		w_pistol = "pistol", 		w_shotgun = "shotgun",
	w_smg = "smg", 		w_rifle = "rifle", 		w_sniper = "sniper", 		w_explosive = "explosive",
}

-- grouped items by section (priority over "kind" grouping)
-- section = group
itms_t = {
	device_pda_2 = "device", 			device_pda_3 = "device",
	detector_advanced = "device", 		detector_elite = "device", 		detector_scientific = "device",	
	device_torch_nv_1 = "device",		device_torch_nv_2 = "device", 	device_torch_nv_3 = "device",
}

-- trade mults general
trade_mult_general_buy = 1.35		-- buy from npc
trade_mult_general_sell = 0.40			-- sell to npc

-- trade additional discount for "BUY FROM npc" based on goodwill		(minus % to cost)
trade_progressive_discount = 3

-- trade discount for "BUY FROM npc" multipliers per group	(minus % to cost)
trader_group_discount_buy = {
	sidorovich = { shotgun = 10, pistol = 10, food = 5, o_medium = 5, o_light = 5, device = 3, medicine = 5 },
	duty = { rifle = 10, shotgun = 10, o_heavy = 5, o_medium = 3, medicine = 5 },
	freedom = { rifle = 10, sniper = 10, o_heavy = 3, o_medium = 5, medicine = 5 },
	sakharov = { pistol = 10, smg = 10, medicine = 20, device = 10, o_sci = 5 },
	nimble = { o_heavy = -15, o_medium = -15, o_light = -10, shotgun = 1, pistol = 1, rifle = 30, smg = -5, sniper = -10, },
	mechanic = { kit = 25, repair = 5 },
	medic = { medicine = 35 },
	butcher = { mutant_food = 10 }, 
	other = { sniper = 3, rifle = 3, shotgun = 3, smg = 3, pistol = 3, o_medium = 3 },		-- not used
}

-- trade discount for "SELL TO npc" multipliers per group	(plus % to cost)
trader_group_discount_sell = {
	sidorovich = { sniper = 10, shotgun = 5, pistol = 5, food = 0, o_heavy = 10, o_medium = 15, o_light = 20, device = 20, junk = 15 },
	duty = { rifle = 0, shotgun = 0, o_heavy = 0, o_medium = 0 },
	freedom = { rifle = 0, sniper = 0, o_heavy = 0, o_medium = 0 },
	sakharov = { pistol = 0, smg = 0, medicine = 0, device = 2, o_sci = 0 , artefact = 20, jartefact = 10 },
	nimble = { pistol = 0 },
	mechanic = { upgrade = 10, kit = 5, repair = 3 },
	medic = { medicine = 10 },
	butcher = { mutant_hide = 55, mutant_parts = 45, mutant_meat = 40 },
	other = { sniper = 0, rifle = 0, shotgun = 0, smg = 0, pistol = 0, o_medium = 0 },		-- not used
}

-- reward as items
-- [tier] = {
--		chance 		= chance to give reward as items
--		sum 				= percent of reward used for items \ процент денег с суммы награды, на которые покупаются предметы
--		div				= divider for "main_items" cost \ делитель для себестоимости главного предмета 
--		main_items	= pick one main item (cost will be divided by "div")
--		items 			= list of item groups from which it picks items randomly until "sum" percents are reached

-- ["тип smg"] = { процент 1го тира 47, процент 2го тира 38, процент 3го тира, но не "достанет" скорее всего 10, 5,				вероятность шмотки в целом 100 }, 

reward_items_t = {
	[1] = {
		chance = 25,
		sum = 90,
		div = 1.35,
		-- 1.5,
		main_items = { 
			["pistol"] = { 40, 32, 27, 1,			100 }, 
			["smg"] = { 60, 20, 15, 5,				90 }, 
			["shotgun"] = { 55, 30, 10, 5,			80 }, 
			["attach"] = { 60, 30, 9, 1,			35 }, 			
			["o_light"] = { 15, 40, 35, 10,			85 }, 
			["o_medium"] = { 75, 20, 3, 2,			80 },
			["helmet"] = { 35, 50, 15, 0,			45 },
			["backpack"] = { 50, 45, 3, 2,			40 }, 						
			["melee"] = { 59, 40, 1, 0,				15 }, 						
		},
		items = { "ammo", "medicine", "food", "upgrade", "repair" },
	},

	[2] = {
		chance = 32,
		sum = 90,
		div = 1.55,
		-- 2.3,
		main_items = { 
			["pistol"] = { 0, 20, 40, 40,			85 }, 		
			["smg"] = { 5, 40, 40, 15,				90 }, 
			["shotgun"] = { 5, 45, 40, 10,			80 }, 
			["rifle"] = { 60, 25, 10, 5,			70 }, 
			["sniper"] = { 45, 40, 10, 5,			90 }, 			
			["attach"] = { 5, 40, 38, 17,			35 }, 
			["o_medium"] = { 1, 35, 39, 25,			90 }, 
			["o_heavy"] = { 85, 15, 0, 0,			75 }, 			
			["o_sci"] = { 0, 0, 90, 10,				90 }, 
			["device"] = { 0, 0, 100, 0,			50 },
			["helmet"] = { 2, 3, 55, 40,			45 }, 			
			["backpack"] = { 2, 3, 55, 40,			35 }, 			
			["melee"] = { 0, 40, 60, 0,				15 }, 			
		},
		items = { "ammo", "medicine", "food", "upgrade", "repair" },
	},

	[3] = {
		chance = 38,
		sum = 90,
		div = 2.25,
		-- 3,
		main_items = { 
			["smg"] = { 0, 5, 45, 50,				80 }, 
			["shotgun"] = { 0, 5, 35, 60,			80 }, 
			["rifle"] = { 0, 10, 30, 60,				90 }, 
			["sniper"] = { 0, 5, 50, 45,			85 }, 
			["o_heavy"] = { 5, 50, 40, 5,			90 }, 
			["o_sci"] = { 0, 0, 85, 15,				80 }, 
			["device"] = { 0, 0, 0, 100,			25 }, 
		},
		items = { "ammo", "medicine", "upgrade", "attach", "repair" },
	},
}

tiers_by_price = {
	["pistol"] = { 10000, 18000, 26000, 40000 }, 
	["smg"] = { 17000, 35000, 45000, 65000 }, 
	["shotgun"] = { 19000, 25000, 37000, 100000 }, 
	["rifle"] = { 25000, 34500, 50000, 100000 }, 
	["sniper"] = { 29000, 46000, 70000, 200000 },
	["attach"] = { 6000, 10000, 14000, 20000 }, 	
	["o_light"] = { 8200, 14000, 20000, 30000 }, 
	["o_medium"] = { 32000, 43000, 51000, 100000 },	
	["o_heavy"] = { 70000, 100000, 155000, 300000 }, 
	["o_sci"] = { 10000, 20000, 70000, 100000 }, 	

	["device"] = { 2000, 5000, 30000, 100000 }, 	
	["helmet"] = { 11000, 20000, 30000, 50000 }, 	
	["backpack"] = { 5000, 11000, 16000, 21000 }, 
	["melee"] = { 13000, 21000, 90000, 100000 }, 	
	
	--["food"] = { 1000, 2500, 8000, 8100 }, 		
	--["upgrade"] = { 4033, 8066, 12100, 13100 }, 	
	--["ammo"] = { 1000, 2000, 50000, 51000 }, 	
	--["medicine"] = { 3000, 7000, 60000, 61000 }, 	
	--["repair"] = { 9453, 18906, 28360, 29360 }, 	
}

-- blacklist for reward items
reward_blacklist_items_t = {
	["pn23fore"] = true,
	["pn23"] = true,
	["camelbak_chug"] = true,
	["camelbak_sip"] = true,
	--["wpn_gauss"] = true,
	["wpn_gauss_quest"] = true,
	--["wpn_toz34_bull"] = true,
	["st_jgut"] = true,
	["wpn_g36"] = true,
	["wpn_g36_camo"] = true,
	["wpn_g36_nimbe"] = true,
	["wpn_g36k"] = true,
	["ammo_50_bmg"] = true,
	--["ammo_knife_6"] = true,
	["fieldcraft_plate_attch"] = true,
	--["wpn_usas12"] = true,
	--["dolg_nosorog_outfit"] = true,
	--["freedom_nosorog_outfit"] = true,
	--["isg_nosorog_outfit"] = true,
	--["merc_nosorog_outfit"] = true,
	--["monolith_nosorog_outfit"] = true,	
	--["ecolog_outfit_orange"] = true,
	--["ecolog_outfit_green"] = true,
	--["ecolog_outfit_white"] = true,
	--["ecolog_outfit_yello"] = true,
	--["wastelander_outfit"] = true,
	--["nomad_outfit"] = true,
	--["merc_scientific_armored_outfit"] = true,
	--["isg_exo_outfit"] = true,
	["raid_injector_general"] = true,
	["wpn_kiparis_m3_pn23"] = true,
	["wpn_xm8"] = true,
	["wpn_xm8_ac10632"] = true,
	["wpn_xm8_eot"] = true,
	["wpn_xm8_ac11090"] = true,
	["wpn_xm8_acog"] = true,
	["wpn_xm8_c-more"] = true,
	["wpn_scar_siber_m2_custom"] = true,
	["wpn_ks23"] = true,
	["wpn_ks23_23_up"] = true,
	["wpn_remington700_bas_lapua700"] = true,
	["helm_rp_bala"] = true,
	["helm_cloth_mask"] = true,
	["helm_bandana"] = true,
	["helm_hardhat_snag"] = true,
	["itm_backpack"] = true,
	["wpn_knife"] = true,
	["wpn_knife2"] = true,
	["wpn_scar_siber_m2_custom"] = true,
	["gauss_sight"] = true,
}
-------------------------------

task_reward_mults = {
	["delivery_in"] = 0.95,	["delivery_out"] = 1.1,		["delivery_out_world"] = 1.05,	["delivery_mines"] = 1,
	["scout"] = 1.2,		["kill_stalker"] = 1.6,	["kill_stalker_squad"] = 2.45,		["kill_mutant_squad"] = 2.20,
	["guide"] = 1.9,		["evacuation"] = 2.3,		["kill_strong_stalker_squad"] = 3.35,		["kill_strong_mutant_squad"] = 3.15,
	["kill_stalker_and_delivery_out"] = 2.9, ["rf_scout_and_delivery_out"] = 2.5, ["rf_find_and_delivery_out"] = 3.3, ["anomaly_scan"] = 1.9,
}

--v0.8.7
--["delivery_in"] = 1.2,	["delivery_out"] = 1.2,		["delivery_out_world"] = 0.8,	["delivery_mines"] = 1,
--["scout"] = 0.6,		["kill_stalker"] = 1.4,	["kill_stalker_squad"] = 1.8,		["kill_mutant_squad"] = 1.8,
--["guide"] = 1.5,		["evacuation"] = 1.7,		["kill_strong_stalker_squad"] = 3,		["kill_strong_mutant_squad"] = 3,

task_special_reward = {
	["find_weapon"] = 1.1,		["find_outfit"] = 1.1,		["find_artefact"] = 1.2,
}


-- [task_tier] = { mutants }
mutant_enemies = {
	[1] = { "dog", "cat", "zombie", "flesh", "boar", "fracture" },
	[2] = { "pseudodog", "lurker", "snork", "bloodsucker" },
	[3] = { "psysucker", "psy_dog", "burer", "chimera", "gigant", "controller" }
}


-- limits of min and max tasks amount 		[goodwill] = { min, max }
task_limits = {
	[-1400] = {0, 1},		[-1000] = {0, 2},		[-800] = {0, 2},		[-600] = {1, 2},		[-300] = {1, 3},
	[0] = {2, 3},		[300] = {2, 4},		[600] = {3, 4},		[800] = {3, 5},		[1000] = {4, 5},		[1400] = {4, 6},
}


-- chances of what task tier we receive
-- [actor_rank] = { t1_task, t2_task, t3_task }
actor_rank_based_tasks = {
	--novice = { 33, 33, 34 },
	novice = { 70, 25, 5 },
	trainee = { 60, 35, 5 },
	experienced = { 45, 45, 10 },
	professional = { 35, 50, 15 },
	veteran = { 20, 50, 30 },
	expert = { 10, 35, 55 },
	master = { 5, 20, 75 },
	legend = { 5, 15, 80 },
}

-- [task_type] = { min_tier, max_tier }
task_minmax_tiers = {
	["delivery_in"] = {1, 3},		["delivery_out"] = {1, 3},		["delivery_out_world"] = {1, 3},
	["delivery_mines"] = {1, 3},		["scout"] = {1, 3},		["kill_stalker"] = {1, 3},
	["kill_stalker_squad"] = {1, 3}, 	["kill_mutant_squad"] = {1, 3},		["guide"] = {1, 3},
	["evacuation"] = {1, 3},		["find_weapon"] = {2, 2},		["find_outfit"] = {2, 2},
	["find_artefact"] = {2, 3},		["kill_strong_stalker_squad"] = {3, 3}, 		["kill_strong_mutant_squad"] = {3, 3},
	["kill_stalker_and_delivery_out"] = {1, 3}, ["rf_scout_and_delivery_out"] = {1, 3}, ["rf_find_and_delivery_out"] = {1, 3}, ["anomaly_scan"] = {1, 3},
}


-- [task_type] = urgency
-- 1 = срочное
-- 2 = срочное + стандартное
-- 3 = срочное + стандартное + не срочное
-- 4 = без ограничений
task_urgency = {
    ["delivery_in"] = 3,    ["delivery_out"] = 2,    ["delivery_out_world"] = 2,    ["delivery_mines"] = 3,    ["scout"] = 3,    ["kill_stalker"] = 2,    ["kill_stalker_squad"] = 2,
    ["kill_mutant_squad"] = 2,    ["guide"] = 3,    ["evacuation"] = 1,        ["find_weapon"] = 2,        ["find_outfit"] = 2,        ["find_artefact"] = 2,
    ["kill_strong_stalker_squad"] = 3,     ["kill_strong_mutant_squad"] = 3, ["kill_stalker_and_delivery_out"] = 2, ["rf_scout_and_delivery_out"] = 2, ["rf_find_and_delivery_out"] = 2, 
	["anomaly_scan"] = 3,
}

-- money urgency-multiplier
task_urgency_reward = {
    [1] = 2,    [2] = 1.32,    [3] = 0.66,
}

-- [urgency] = hours
raid_urgency_time = {
	[1] = 10,	[2] = 24,	[3] = 72,
}


-- =========================================
-- ================= debug ===================
-- =========================================
raid_events_dbg = true


function on_option_change()
	informant_bonus_insurance_percent = raid_options_mcm.get_config("insurance_percent")
	keep_items_amount = raid_options_mcm.get_config("keep_items_on_death")
	rank_loss_on_death = raid_options_mcm.get_config("rank_loss_on_death")
	simulation_spawn_mult = raid_options_mcm.get_config("simulation_spawn_mult")
end

function actor_on_first_update()
    informant_bonus_insurance_percent = raid_options_mcm.get_config("insurance_percent")
    keep_items_amount = raid_options_mcm.get_config("keep_items_on_death")
    rank_loss_on_death = raid_options_mcm.get_config("rank_loss_on_death")
    simulation_spawn_mult = raid_options_mcm.get_config("simulation_spawn_mult")
	--Traders achievements
	local rank_table = raid_achievements.get_table_ranks()
	points_for_new_rank_veteran = rank_table[4]
	points_for_new_rank_expert = rank_table[5]
	points_for_new_rank_master = rank_table[6]
	points_for_new_rank_legend = rank_table[7]									   
end

function on_game_start()
    RegisterScriptCallback("on_option_change", on_option_change)
    RegisterScriptCallback("actor_on_first_update", actor_on_first_update)
end